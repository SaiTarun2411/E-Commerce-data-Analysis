{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QVY8FfP2BoWE",
        "outputId": "2db72fc2-d36e-425a-fed0-7611b5974f1a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14...\n",
            "dtype: object\n",
            "Series([], dtype: object)\n",
            "0    [134, 233, 172, 167, 144, 154, 232, 231, 132, ...\n",
            "dtype: object\n",
            "Series([], dtype: object)\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "a=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],\n",
        "b=[134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273],\n",
        "c=[153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221],\n",
        "d=[520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370],\n",
        "e=[8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8],\n",
        "f=[162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254],\n",
        "g=[2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2],\n",
        "h=[3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2],\n",
        "i=[2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2],\n",
        "x=pd.Series(a)\n",
        "print(x)\n",
        "print(x[-10:-2])\n",
        "x=pd.Series(b)\n",
        "print(x)\n",
        "print(x[-9:-1])"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,273,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N0LbnMQg_yX9",
        "outputId": "d0605c04-7275-4a10-cf2d-35ae09525a31"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       273  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NCLpjBR_Pv2k"
      },
      "source": [
        "Row selection"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "axJ6THscP1eA",
        "outputId": "54bb0bb1-0491-41ed-92f8-a4b0645553f5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       273  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "s.no                                4\n",
            "customer id                       167\n",
            "customer name                 kishore\n",
            "product name                   tshirt\n",
            "product id                        237\n",
            "cost                              250\n",
            "product review                   good\n",
            "product rating                      6\n",
            "product availability              yes\n",
            "order id                          128\n",
            "payment method                 online\n",
            "payment status                 failed\n",
            "returned                          yes\n",
            "quantity                            5\n",
            "quality                             4\n",
            "sales rate                       high\n",
            "discount                          yes\n",
            "cencellation                       no\n",
            "warranty years                      4\n",
            "shipping status         not delivered\n",
            "customer feedback                 bad\n",
            "Name: 3, dtype: object\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,273,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(b.loc[3])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vxADBKYTQF3c"
      },
      "source": [
        "Row Additiopn"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bo4eHfsvQJTG",
        "outputId": "fe08db96-c499-4a81-cd59-b3f49fa18d91"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "23    21         3442        ramesh            mouse        2757   250   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "23            avg               3                  yes      2677  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "23        success       no        1        3        high       no   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "23           no              2        delivered               avg  \n",
            "\n",
            "[23 rows x 21 columns]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "b.loc[23]=[21,3442,'ramesh','mouse',2757,250,'avg',3,'yes',2677,'online','success','no',1,3,'high','no','no',2,'delivered','avg']\n",
        "print(b)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cL0Y2TzYRKLB"
      },
      "source": [
        "Row Deletion"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xg6M0mhKRNTm",
        "outputId": "3d1240f4-e78c-463e-f41d-3616a6345e7c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130  2100   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130  2100   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "\n",
            "[21 rows x 21 columns]\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(b.drop(21))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pAWG_rX0RvPy"
      },
      "source": [
        "colum operations"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bl4QOiX-Rycd",
        "outputId": "170ff2b2-bbbc-4c21-f1f4-8b4fb54d6c97"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130  2100   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "0     yes\n",
            "1      no\n",
            "2      no\n",
            "3     yes\n",
            "4     yes\n",
            "5     yes\n",
            "6      no\n",
            "7      no\n",
            "8     yes\n",
            "9      no\n",
            "10     no\n",
            "11    yes\n",
            "12    yes\n",
            "13    yes\n",
            "14    yes\n",
            "15     no\n",
            "16     no\n",
            "17     no\n",
            "18     no\n",
            "19    yes\n",
            "20    yes\n",
            "21     no\n",
            "Name: product availability, dtype: object\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(b['product availability'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w5GszgT0gK1B",
        "outputId": "7c8cd090-a5a6-4828-d648-784ddbd5d24f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171  3500   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130  2100   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171  3500   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130  2100   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   returned quantity quality  sales rate  discount cencellation  \\\n",
            "0       no         2       3        high       yes           no   \n",
            "1       no         1       1        high        no          yes   \n",
            "2       yes        3       5         low        no          yes   \n",
            "3       yes        5       4        high       yes           no   \n",
            "4       no         3       3         low        no           no   \n",
            "5        no        1       1         low       yes          yes   \n",
            "6        no        1       4        high        no           no   \n",
            "7       yes        2       3         low        no           no   \n",
            "8       yes        3       4        high        no           no   \n",
            "9        no        1       2         low       yes          yes   \n",
            "10       no        2       2         low        no          yes   \n",
            "11      yes        6       4        high        no           no   \n",
            "12       no        2       3         low       yes           no   \n",
            "13      yes        1       4         low       yes           no   \n",
            "14      yes        5       5        high        no           no   \n",
            "15       no        2       5         low        no           no   \n",
            "16      yes        4       1         low       yes          yes   \n",
            "17       no        6       2         low        no           no   \n",
            "18      yes        4       4        high       yes          yes   \n",
            "19       no        7       3         low        no           no   \n",
            "20      yes        3       2        high        no          yes   \n",
            "21       no        2       2         low       yes           no   \n",
            "\n",
            "   warranty years shipping status  customer feedback result  \n",
            "0               2       delivered               good    654  \n",
            "1               5       delivered               good    803  \n",
            "2               3   not delivered                bad    522  \n",
            "3               4   not delivered                bad    417  \n",
            "4               2       delivered                bad    444  \n",
            "5               3       delivered                avg    604  \n",
            "6               1       delivered                avg    432  \n",
            "7               2   not delivered               good    881  \n",
            "8               2   not delivered               good    612  \n",
            "9               2       delivered                avg    643  \n",
            "10              3       delivered                bad   3621  \n",
            "11              4   not delivered                bad   1001  \n",
            "12              4       delivered                avg    482  \n",
            "13              3   not delivered               good    945  \n",
            "14              2   not delivered                bad    464  \n",
            "15              3       delivered                bad    405  \n",
            "16              2   not delivered               good    705  \n",
            "17              3       delivered               good    244  \n",
            "18              3   not delivered                bad    572  \n",
            "19              1       delivered                avg    692  \n",
            "20              1   not delivered                avg   2273  \n",
            "21              2       delivered               good    643  \n",
            "\n",
            "[22 rows x 22 columns]\n",
            "0      654\n",
            "1      803\n",
            "2      522\n",
            "3      417\n",
            "4      444\n",
            "5      604\n",
            "6      432\n",
            "7      881\n",
            "8      612\n",
            "9      643\n",
            "10    3621\n",
            "11    1001\n",
            "12     482\n",
            "13     945\n",
            "14     464\n",
            "15     405\n",
            "16     705\n",
            "17     244\n",
            "18     572\n",
            "19     692\n",
            "20    2273\n",
            "21     643\n",
            "Name: result, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "#cloumn addition\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,3500,780,220,820,340,180,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "b['result']=b['customer id']+b['cost']\n",
        "print(b)\n",
        "print(b.result)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9ubo0UMcgqvI",
        "outputId": "fa640a07-a8fc-451b-ea07-ddabfb496071"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0      1          134          siva            shoes         153    520   \n",
            "1      2          233       krishna           laptop         126  57000   \n",
            "2      3          172          ravi          ironbox         273    350   \n",
            "3      4          167       kishore           tshirt         237    250   \n",
            "4      5          144          ramu       mobilecase         135    300   \n",
            "5      6          154          raju  washing machine         253    450   \n",
            "6      7          232       shankar            watch         286    200   \n",
            "7      8          231         kiran              bag         197    650   \n",
            "8      9          132        tulasi      memory card         207    480   \n",
            "9     10          123       sridhar               AC         269    520   \n",
            "10    11          121         tarun         pendrive         171    350   \n",
            "11    12          221         peter       jeans pant         105    780   \n",
            "12    13          262          baji            crocs         273   2200   \n",
            "13    14          125       krishna        key board         188    820   \n",
            "14    15          124          hema           glouse         289    340   \n",
            "15    16          225         navya            table         283    180   \n",
            "16    17          235        venkat            chair         199    470   \n",
            "17    18          124        lokesh            light         218    120   \n",
            "18    19          232      srikanth              cap         296    340   \n",
            "19    20          132     raj kumar            shirt         199    560   \n",
            "20    21          173       meghana       makeup kit         130   2100   \n",
            "21    22          273        harish           mobile         221    370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0      1          134          siva            shoes         153    520   \n",
            "1      2          233       krishna           laptop         126  57000   \n",
            "2      3          172          ravi          ironbox         273    350   \n",
            "3      4          167       kishore           tshirt         237    250   \n",
            "4      5          144          ramu       mobilecase         135    300   \n",
            "5      6          154          raju  washing machine         253    450   \n",
            "6      7          232       shankar            watch         286    200   \n",
            "7      8          231         kiran              bag         197    650   \n",
            "8      9          132        tulasi      memory card         207    480   \n",
            "9     10          123       sridhar               AC         269    520   \n",
            "10    11          121         tarun         pendrive         171    350   \n",
            "11    12          221         peter       jeans pant         105    780   \n",
            "12    13          262          baji            crocs         273   2200   \n",
            "13    14          125       krishna        key board         188    820   \n",
            "14    15          124          hema           glouse         289    340   \n",
            "15    16          225         navya            table         283    180   \n",
            "16    17          235        venkat            chair         199    470   \n",
            "17    18          124        lokesh            light         218    120   \n",
            "18    19          232      srikanth              cap         296    340   \n",
            "19    20          132     raj kumar            shirt         199    560   \n",
            "20    21          173       meghana       makeup kit         130   2100   \n",
            "21    22          273        harish           mobile         221    370   \n",
            "\n",
            "   product review  product rating product availability  order id  \\\n",
            "0            good               8                  yes       162   \n",
            "1             avg              10                   no       227   \n",
            "2       excellent               4                   no       182   \n",
            "3            good               6                  yes       128   \n",
            "4             bad               2                  yes       170   \n",
            "5             avg               8                  yes       283   \n",
            "6             avg               4                   no       273   \n",
            "7            good               5                   no       267   \n",
            "8       excellent               8                  yes       253   \n",
            "9             avg               3                   no       173   \n",
            "10           good               5                   no       167   \n",
            "11            bad               3                  yes       125   \n",
            "12           good               6                  yes       166   \n",
            "13      excellent               5                  yes       284   \n",
            "14           good               7                  yes       264   \n",
            "15            avg               5                   no       163   \n",
            "16           good               9                   no       164   \n",
            "17      excellent               7                   no       265   \n",
            "18            avg               5                   no       262   \n",
            "19            bad               8                  yes       149   \n",
            "20           good               4                  yes       154   \n",
            "21      excellent               8                   no       254   \n",
            "\n",
            "   payment method payment status returned  quantity  quality sales rate  \\\n",
            "0          online        success      no          2        3       high   \n",
            "1             COD        success      no          1        1       high   \n",
            "2             COD         failed      yes         3        5        low   \n",
            "3          online         failed      yes         5        4       high   \n",
            "4          online        success      no          3        3        low   \n",
            "5             COD        success       no         1        1        low   \n",
            "6             COD        success       no         1        4       high   \n",
            "7          online         failed      yes         2        3        low   \n",
            "8             COD         failed      yes         3        4       high   \n",
            "9          online        success       no         1        2        low   \n",
            "10            COD        success       no         2        2        low   \n",
            "11         online         failed      yes         6        4       high   \n",
            "12         online        success       no         2        3        low   \n",
            "13         online         failed      yes         1        4        low   \n",
            "14            COD         failed      yes         5        5       high   \n",
            "15            COD        success       no         2        5        low   \n",
            "16         online         failed      yes         4        1        low   \n",
            "17            COD        success       no         6        2        low   \n",
            "18            COD         failed      yes         4        4       high   \n",
            "19         online        success       no         7        3        low   \n",
            "20            COD         failed      yes         3        2       high   \n",
            "21            COD        success       no         2        2        low   \n",
            "\n",
            "   discount cencellation  warranty years shipping status  \n",
            "0       yes           no               2       delivered  \n",
            "1        no          yes               5       delivered  \n",
            "2        no          yes               3   not delivered  \n",
            "3       yes           no               4   not delivered  \n",
            "4        no           no               2       delivered  \n",
            "5       yes          yes               3       delivered  \n",
            "6        no           no               1       delivered  \n",
            "7        no           no               2   not delivered  \n",
            "8        no           no               2   not delivered  \n",
            "9       yes          yes               2       delivered  \n",
            "10       no          yes               3       delivered  \n",
            "11       no           no               4   not delivered  \n",
            "12      yes           no               4       delivered  \n",
            "13      yes           no               3   not delivered  \n",
            "14       no           no               2   not delivered  \n",
            "15       no           no               3       delivered  \n",
            "16      yes          yes               2   not delivered  \n",
            "17       no           no               3       delivered  \n",
            "18      yes          yes               3   not delivered  \n",
            "19       no           no               1       delivered  \n",
            "20       no          yes               1   not delivered  \n",
            "21      yes           no               2       delivered  \n"
          ]
        }
      ],
      "source": [
        "#column deltion\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,57000,350,250,300,450,200,650,480,520,350,780,2200,820,340,180,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "del b['customer feedback']\n",
        "print(b)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zXEN7oCvhAK7"
      },
      "source": [
        "cleaning the data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LZ584EkEhChw",
        "outputId": "5c32f91a-9c94-4c53-e952-448b6df74d78"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id    cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0   520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0   570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0   350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0   250.0   \n",
            "4    5.0        144.0           NaN       mobilecase       135.0   300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0   450.0   \n",
            "6    NaN        232.0       shankar              NaN       286.0     NaN   \n",
            "7    8.0        231.0         kiran              bag       197.0   650.0   \n",
            "8    9.0          NaN        tulasi      memory card       207.0   480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0   520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  3500.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0   780.0   \n",
            "12  13.0        262.0          baji            crocs         NaN   220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0   820.0   \n",
            "14   NaN        124.0          hema           glouse       289.0   340.0   \n",
            "15  16.0        225.0         navya            table       283.0   180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0   470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0   120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0   340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0   560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  2100.0   \n",
            "21  22.0        273.0        harish           mobile       221.0   370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             NaN             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                  NaN     273.0  ...   \n",
            "7            good             5.0                   no       NaN  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             NaN                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      NaN         NaN      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      NaN      4.0        high       no   \n",
            "9         success      NaN      1.0      2.0         low      NaN   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0              NaN               bad  \n",
            "4            no            2.0        delivered               NaN  \n",
            "5           NaN            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            NaN    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "-----------isnull-------------\n",
            "     s.no  customer id  customer name  product name  product id   cost  \\\n",
            "0   False        False          False         False       False  False   \n",
            "1   False        False          False         False       False  False   \n",
            "2   False        False          False         False       False  False   \n",
            "3   False        False          False         False       False  False   \n",
            "4   False        False           True         False       False  False   \n",
            "5   False        False          False         False       False  False   \n",
            "6    True        False          False          True       False   True   \n",
            "7   False        False          False         False       False  False   \n",
            "8   False         True          False         False       False  False   \n",
            "9   False        False          False         False       False  False   \n",
            "10  False        False          False         False       False  False   \n",
            "11  False        False          False         False       False  False   \n",
            "12  False        False          False         False        True  False   \n",
            "13  False        False          False         False       False  False   \n",
            "14   True        False          False         False       False  False   \n",
            "15  False        False          False         False       False  False   \n",
            "16  False        False          False         False       False  False   \n",
            "17  False        False          False         False       False  False   \n",
            "18  False        False          False         False       False  False   \n",
            "19  False        False          False         False       False  False   \n",
            "20  False        False          False         False       False  False   \n",
            "21  False        False          False         False       False  False   \n",
            "\n",
            "    product review  product rating  product availability  order id  ...  \\\n",
            "0            False           False                 False     False  ...   \n",
            "1            False           False                 False     False  ...   \n",
            "2            False           False                 False     False  ...   \n",
            "3            False           False                 False     False  ...   \n",
            "4            False           False                 False     False  ...   \n",
            "5             True           False                 False     False  ...   \n",
            "6            False           False                  True     False  ...   \n",
            "7            False           False                 False      True  ...   \n",
            "8            False           False                 False     False  ...   \n",
            "9            False           False                 False     False  ...   \n",
            "10           False            True                 False     False  ...   \n",
            "11           False           False                 False     False  ...   \n",
            "12           False           False                 False     False  ...   \n",
            "13           False           False                 False     False  ...   \n",
            "14           False           False                 False     False  ...   \n",
            "15           False           False                 False     False  ...   \n",
            "16           False           False                 False     False  ...   \n",
            "17           False           False                 False     False  ...   \n",
            "18           False           False                 False     False  ...   \n",
            "19           False           False                 False     False  ...   \n",
            "20           False           False                 False     False  ...   \n",
            "21           False           False                 False     False  ...   \n",
            "\n",
            "    payment status  returned  quantity  quality  sales rate  discount  \\\n",
            "0            False     False     False    False       False     False   \n",
            "1            False     False     False    False       False     False   \n",
            "2            False     False     False    False       False     False   \n",
            "3            False     False     False    False       False     False   \n",
            "4            False     False     False    False       False     False   \n",
            "5            False     False     False     True        True     False   \n",
            "6            False     False     False    False       False     False   \n",
            "7            False     False     False    False       False     False   \n",
            "8            False     False      True    False       False     False   \n",
            "9            False      True     False    False       False      True   \n",
            "10           False     False     False    False       False     False   \n",
            "11           False     False     False    False       False     False   \n",
            "12           False     False     False    False       False     False   \n",
            "13           False     False     False    False       False     False   \n",
            "14           False     False     False    False       False     False   \n",
            "15           False     False     False    False       False     False   \n",
            "16           False     False     False    False       False     False   \n",
            "17           False     False     False    False       False     False   \n",
            "18           False     False     False    False       False     False   \n",
            "19           False     False     False    False       False     False   \n",
            "20           False     False     False    False       False     False   \n",
            "21           False     False     False    False       False     False   \n",
            "\n",
            "    cencellation  warranty years  shipping status  customer feedback  \n",
            "0          False           False            False              False  \n",
            "1          False           False            False              False  \n",
            "2          False           False            False              False  \n",
            "3          False           False             True              False  \n",
            "4          False           False            False               True  \n",
            "5           True           False            False              False  \n",
            "6          False           False            False              False  \n",
            "7          False            True            False              False  \n",
            "8          False           False            False              False  \n",
            "9          False           False            False              False  \n",
            "10         False           False            False              False  \n",
            "11         False           False            False              False  \n",
            "12         False           False            False              False  \n",
            "13         False           False            False              False  \n",
            "14         False           False            False              False  \n",
            "15         False           False            False              False  \n",
            "16         False           False            False              False  \n",
            "17         False           False            False              False  \n",
            "18         False           False            False              False  \n",
            "19         False           False            False              False  \n",
            "20         False           False            False              False  \n",
            "21         False           False            False              False  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "-----------notnull-------------\n",
            "     s.no  customer id  customer name  product name  product id   cost  \\\n",
            "0    True         True           True          True        True   True   \n",
            "1    True         True           True          True        True   True   \n",
            "2    True         True           True          True        True   True   \n",
            "3    True         True           True          True        True   True   \n",
            "4    True         True          False          True        True   True   \n",
            "5    True         True           True          True        True   True   \n",
            "6   False         True           True         False        True  False   \n",
            "7    True         True           True          True        True   True   \n",
            "8    True        False           True          True        True   True   \n",
            "9    True         True           True          True        True   True   \n",
            "10   True         True           True          True        True   True   \n",
            "11   True         True           True          True        True   True   \n",
            "12   True         True           True          True       False   True   \n",
            "13   True         True           True          True        True   True   \n",
            "14  False         True           True          True        True   True   \n",
            "15   True         True           True          True        True   True   \n",
            "16   True         True           True          True        True   True   \n",
            "17   True         True           True          True        True   True   \n",
            "18   True         True           True          True        True   True   \n",
            "19   True         True           True          True        True   True   \n",
            "20   True         True           True          True        True   True   \n",
            "21   True         True           True          True        True   True   \n",
            "\n",
            "    product review  product rating  product availability  order id  ...  \\\n",
            "0             True            True                  True      True  ...   \n",
            "1             True            True                  True      True  ...   \n",
            "2             True            True                  True      True  ...   \n",
            "3             True            True                  True      True  ...   \n",
            "4             True            True                  True      True  ...   \n",
            "5            False            True                  True      True  ...   \n",
            "6             True            True                 False      True  ...   \n",
            "7             True            True                  True     False  ...   \n",
            "8             True            True                  True      True  ...   \n",
            "9             True            True                  True      True  ...   \n",
            "10            True           False                  True      True  ...   \n",
            "11            True            True                  True      True  ...   \n",
            "12            True            True                  True      True  ...   \n",
            "13            True            True                  True      True  ...   \n",
            "14            True            True                  True      True  ...   \n",
            "15            True            True                  True      True  ...   \n",
            "16            True            True                  True      True  ...   \n",
            "17            True            True                  True      True  ...   \n",
            "18            True            True                  True      True  ...   \n",
            "19            True            True                  True      True  ...   \n",
            "20            True            True                  True      True  ...   \n",
            "21            True            True                  True      True  ...   \n",
            "\n",
            "    payment status  returned  quantity  quality  sales rate  discount  \\\n",
            "0             True      True      True     True        True      True   \n",
            "1             True      True      True     True        True      True   \n",
            "2             True      True      True     True        True      True   \n",
            "3             True      True      True     True        True      True   \n",
            "4             True      True      True     True        True      True   \n",
            "5             True      True      True    False       False      True   \n",
            "6             True      True      True     True        True      True   \n",
            "7             True      True      True     True        True      True   \n",
            "8             True      True     False     True        True      True   \n",
            "9             True     False      True     True        True     False   \n",
            "10            True      True      True     True        True      True   \n",
            "11            True      True      True     True        True      True   \n",
            "12            True      True      True     True        True      True   \n",
            "13            True      True      True     True        True      True   \n",
            "14            True      True      True     True        True      True   \n",
            "15            True      True      True     True        True      True   \n",
            "16            True      True      True     True        True      True   \n",
            "17            True      True      True     True        True      True   \n",
            "18            True      True      True     True        True      True   \n",
            "19            True      True      True     True        True      True   \n",
            "20            True      True      True     True        True      True   \n",
            "21            True      True      True     True        True      True   \n",
            "\n",
            "    cencellation  warranty years  shipping status  customer feedback  \n",
            "0           True            True             True               True  \n",
            "1           True            True             True               True  \n",
            "2           True            True             True               True  \n",
            "3           True            True            False               True  \n",
            "4           True            True             True              False  \n",
            "5          False            True             True               True  \n",
            "6           True            True             True               True  \n",
            "7           True           False             True               True  \n",
            "8           True            True             True               True  \n",
            "9           True            True             True               True  \n",
            "10          True            True             True               True  \n",
            "11          True            True             True               True  \n",
            "12          True            True             True               True  \n",
            "13          True            True             True               True  \n",
            "14          True            True             True               True  \n",
            "15          True            True             True               True  \n",
            "16          True            True             True               True  \n",
            "17          True            True             True               True  \n",
            "18          True            True             True               True  \n",
            "19          True            True             True               True  \n",
            "20          True            True             True               True  \n",
            "21          True            True             True               True  \n",
            "\n",
            "[22 rows x 21 columns]\n"
          ]
        }
      ],
      "source": [
        "#empty cell #isnull #nutnull\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,np.nan,8,9,10,11,12,13,14,np.nan,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,np.nan,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore',np.nan,'raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine',np.nan,'bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,np.nan,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,np.nan,650,480,520,3500,780,220,820,340,180,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad',np.nan,'avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,np.nan,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes',np.nan,'no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,np.nan,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD',np.nan,'online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes',np.nan,'no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,np.nan,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,np.nan,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low',np.nan,'high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no',np.nan,'no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no',np.nan,'no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,np.nan,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered',np.nan,'delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad',np.nan,'avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"-----------isnull-------------\")\n",
        "print(b.isnull())\n",
        "print(\"-----------notnull-------------\")\n",
        "print(b.notnull())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Evw3wF9ailVO",
        "outputId": "50ee7162-9a14-47db-ad00-b6c90ab5fa40"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id    cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0   520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0   570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0   350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0   250.0   \n",
            "4    5.0        144.0           NaN       mobilecase       135.0   300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0   450.0   \n",
            "6    NaN        232.0       shankar              NaN       286.0     NaN   \n",
            "7    8.0        231.0         kiran              bag       197.0   650.0   \n",
            "8    9.0          NaN        tulasi      memory card       207.0   480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0   520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0   350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0   780.0   \n",
            "12  13.0        262.0          baji            crocs         NaN   220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0   820.0   \n",
            "14   NaN        124.0          hema           glouse       289.0   340.0   \n",
            "15  16.0        225.0         navya            table       283.0  1800.0   \n",
            "16  17.0        235.0        venkat            chair       199.0   470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0   120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0   340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0   560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  2100.0   \n",
            "21  22.0        273.0        harish           mobile       221.0   370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             NaN             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                  NaN     273.0  ...   \n",
            "7            good             5.0                   no       NaN  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             NaN                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      NaN         NaN      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      NaN      4.0        high       no   \n",
            "9         success      NaN      1.0      2.0         low      NaN   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0              NaN               bad  \n",
            "4            no            2.0        delivered               NaN  \n",
            "5           NaN            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            NaN    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "3837.0\n"
          ]
        }
      ],
      "source": [
        "#wrong format\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,np.nan,8,9,10,11,12,13,14,np.nan,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,np.nan,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore',np.nan,'raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine',np.nan,'bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,np.nan,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,np.nan,650,480,520,350,780,220,820,340,1800,470,120,340,560,2100,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad',np.nan,'avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,np.nan,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes',np.nan,'no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,np.nan,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD',np.nan,'online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes',np.nan,'no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,np.nan,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,np.nan,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low',np.nan,'high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no',np.nan,'no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no',np.nan,'no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,np.nan,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered',np.nan,'delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad',np.nan,'avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(b['customer id'].sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kYf0gjLCjKuz",
        "outputId": "461fe946-5780-4c65-91e6-d21b0f484bec"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0  570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0  350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0  250.0   \n",
            "4    5.0        144.0           NaN       mobilecase       135.0  300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0  450.0   \n",
            "6    NaN        232.0       shankar              NaN       286.0    NaN   \n",
            "7    8.0        231.0         kiran              bag       197.0  650.0   \n",
            "8    9.0          NaN        tulasi      memory card       207.0  480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0  520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0  780.0   \n",
            "12  13.0        262.0          baji            crocs         NaN  220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0  820.0   \n",
            "14   NaN        124.0          hema           glouse       289.0  340.0   \n",
            "15  16.0        225.0         navya            table       283.0  180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish           mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             NaN             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                  NaN     273.0  ...   \n",
            "7            good             5.0                   no       NaN  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             NaN                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      NaN         NaN      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      NaN      4.0        high       no   \n",
            "9         success      NaN      1.0      2.0         low      NaN   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0              NaN               bad  \n",
            "4            no            2.0        delivered               NaN  \n",
            "5           NaN            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            NaN    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "---------dropna----------\n",
            "    s.no  customer id customer name product name  product id   cost  \\\n",
            "0    1.0        134.0          siva        shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna       laptop       126.0  570.0   \n",
            "11  12.0        221.0         peter   jeans pant       105.0  780.0   \n",
            "13  14.0        125.0       krishna    key board       188.0  820.0   \n",
            "15  16.0        225.0         navya        table       283.0  180.0   \n",
            "16  17.0        235.0        venkat        chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh        light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth          cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar        shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana   makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish       mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "11           no            4.0    not delivered               bad  \n",
            "13           no            3.0    not delivered              good  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[11 rows x 21 columns]\n"
          ]
        }
      ],
      "source": [
        "#dropna\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,np.nan,8,9,10,11,12,13,14,np.nan,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,np.nan,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore',np.nan,'raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine',np.nan,'bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,np.nan,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,np.nan,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad',np.nan,'avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,np.nan,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes',np.nan,'no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,np.nan,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD',np.nan,'online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes',np.nan,'no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,np.nan,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,np.nan,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low',np.nan,'high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no',np.nan,'no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no',np.nan,'no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,np.nan,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered',np.nan,'delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad',np.nan,'avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"---------dropna----------\")\n",
        "print(b.dropna())\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R6wZR7l9j65d",
        "outputId": "14718336-f112-4880-c83a-dd5dca77955c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0  570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0  350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0  250.0   \n",
            "4    5.0        144.0           NaN       mobilecase       135.0  300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0  450.0   \n",
            "6    NaN        232.0       shankar              NaN       286.0    NaN   \n",
            "7    8.0        231.0         kiran              bag       197.0  650.0   \n",
            "8    9.0          NaN        tulasi      memory card       207.0  480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0  520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0  780.0   \n",
            "12  13.0        262.0          baji            crocs         NaN  220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0  820.0   \n",
            "14   NaN        124.0          hema           glouse       289.0  340.0   \n",
            "15  16.0        225.0         navya            table       283.0  180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish           mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             NaN             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                  NaN     273.0  ...   \n",
            "7            good             5.0                   no       NaN  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             NaN                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      NaN         NaN      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      NaN      4.0        high       no   \n",
            "9         success      NaN      1.0      2.0         low      NaN   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0              NaN               bad  \n",
            "4            no            2.0        delivered               NaN  \n",
            "5           NaN            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            NaN    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "----------fillna-----------\n",
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0  570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0  350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0  250.0   \n",
            "4    5.0        144.0            26       mobilecase       135.0  300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0  450.0   \n",
            "6   26.0        232.0       shankar               26       286.0   26.0   \n",
            "7    8.0        231.0         kiran              bag       197.0  650.0   \n",
            "8    9.0         26.0        tulasi      memory card       207.0  480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0  520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0  780.0   \n",
            "12  13.0        262.0          baji            crocs        26.0  220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0  820.0   \n",
            "14  26.0        124.0          hema           glouse       289.0  340.0   \n",
            "15  16.0        225.0         navya            table       283.0  180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish           mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5              26             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                   26     273.0  ...   \n",
            "7            good             5.0                   no      26.0  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good            26.0                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0     26.0          26      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes     26.0      4.0        high       no   \n",
            "9         success       26      1.0      2.0         low       26   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0               26               bad  \n",
            "4            no            2.0        delivered                26  \n",
            "5            26            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no           26.0    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "---------fillna(method='pad')----------\n",
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0  570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0  350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0  250.0   \n",
            "4    5.0        144.0       kishore       mobilecase       135.0  300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0  450.0   \n",
            "6    6.0        232.0       shankar  washing machine       286.0  450.0   \n",
            "7    8.0        231.0         kiran              bag       197.0  650.0   \n",
            "8    9.0        231.0        tulasi      memory card       207.0  480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0  520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0  780.0   \n",
            "12  13.0        262.0          baji            crocs       105.0  220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0  820.0   \n",
            "14  14.0        124.0          hema           glouse       289.0  340.0   \n",
            "15  16.0        225.0         navya            table       283.0  180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish           mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             bad             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                  yes     273.0  ...   \n",
            "7            good             5.0                   no     273.0  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             3.0                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      3.0         low      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      2.0      4.0        high       no   \n",
            "9         success      yes      1.0      2.0         low       no   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0    not delivered               bad  \n",
            "4            no            2.0        delivered               bad  \n",
            "5            no            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            1.0    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "---------fillna(method='bfill')--------\n",
            "    s.no  customer id customer name     product name  product id   cost  \\\n",
            "0    1.0        134.0          siva            shoes       153.0  520.0   \n",
            "1    2.0        233.0       krishna           laptop       126.0  570.0   \n",
            "2    3.0        172.0          ravi          ironbox       273.0  350.0   \n",
            "3    4.0        167.0       kishore           tshirt       237.0  250.0   \n",
            "4    5.0        144.0          raju       mobilecase       135.0  300.0   \n",
            "5    6.0        154.0          raju  washing machine       253.0  450.0   \n",
            "6    8.0        232.0       shankar              bag       286.0  650.0   \n",
            "7    8.0        231.0         kiran              bag       197.0  650.0   \n",
            "8    9.0        123.0        tulasi      memory card       207.0  480.0   \n",
            "9   10.0        123.0       sridhar               AC       269.0  520.0   \n",
            "10  11.0        121.0         tarun         pendrive       171.0  350.0   \n",
            "11  12.0        221.0         peter       jeans pant       105.0  780.0   \n",
            "12  13.0        262.0          baji            crocs       188.0  220.0   \n",
            "13  14.0        125.0       krishna        key board       188.0  820.0   \n",
            "14  16.0        124.0          hema           glouse       289.0  340.0   \n",
            "15  16.0        225.0         navya            table       283.0  180.0   \n",
            "16  17.0        235.0        venkat            chair       199.0  470.0   \n",
            "17  18.0        124.0        lokesh            light       218.0  120.0   \n",
            "18  19.0        232.0      srikanth              cap       296.0  340.0   \n",
            "19  20.0        132.0     raj kumar            shirt       199.0  560.0   \n",
            "20  21.0        173.0       meghana       makeup kit       130.0  210.0   \n",
            "21  22.0        273.0        harish           mobile       221.0  370.0   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good             8.0                  yes     162.0  ...   \n",
            "1             avg            10.0                   no     227.0  ...   \n",
            "2       excellent             4.0                   no     182.0  ...   \n",
            "3            good             6.0                  yes     128.0  ...   \n",
            "4             bad             2.0                  yes     170.0  ...   \n",
            "5             avg             8.0                  yes     283.0  ...   \n",
            "6             avg             4.0                   no     273.0  ...   \n",
            "7            good             5.0                   no     253.0  ...   \n",
            "8       excellent             8.0                  yes     253.0  ...   \n",
            "9             avg             3.0                   no     173.0  ...   \n",
            "10           good             3.0                   no     167.0  ...   \n",
            "11            bad             3.0                  yes     125.0  ...   \n",
            "12           good             6.0                  yes     166.0  ...   \n",
            "13      excellent             5.0                  yes     284.0  ...   \n",
            "14           good             7.0                  yes     264.0  ...   \n",
            "15            avg             5.0                   no     163.0  ...   \n",
            "16           good             9.0                   no     164.0  ...   \n",
            "17      excellent             7.0                   no     265.0  ...   \n",
            "18            avg             5.0                   no     262.0  ...   \n",
            "19            bad             8.0                  yes     149.0  ...   \n",
            "20           good             4.0                  yes     154.0  ...   \n",
            "21      excellent             8.0                   no     254.0  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no       2.0      3.0        high      yes   \n",
            "1         success      no       1.0      1.0        high       no   \n",
            "2          failed      yes      3.0      5.0         low       no   \n",
            "3          failed      yes      5.0      4.0        high      yes   \n",
            "4         success      no       3.0      3.0         low       no   \n",
            "5         success       no      1.0      4.0        high      yes   \n",
            "6         success       no      1.0      4.0        high       no   \n",
            "7          failed      yes      2.0      3.0         low       no   \n",
            "8          failed      yes      1.0      4.0        high       no   \n",
            "9         success       no      1.0      2.0         low       no   \n",
            "10        success       no      2.0      2.0         low       no   \n",
            "11         failed      yes      6.0      4.0        high       no   \n",
            "12        success       no      2.0      3.0         low      yes   \n",
            "13         failed      yes      1.0      4.0         low      yes   \n",
            "14         failed      yes      5.0      5.0        high       no   \n",
            "15        success       no      2.0      5.0         low       no   \n",
            "16         failed      yes      4.0      1.0         low      yes   \n",
            "17        success       no      6.0      2.0         low       no   \n",
            "18         failed      yes      4.0      4.0        high      yes   \n",
            "19        success       no      7.0      3.0         low       no   \n",
            "20         failed      yes      3.0      2.0        high       no   \n",
            "21        success       no      2.0      2.0         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no            2.0        delivered              good  \n",
            "1           yes            5.0        delivered              good  \n",
            "2           yes            3.0    not delivered               bad  \n",
            "3            no            4.0        delivered               bad  \n",
            "4            no            2.0        delivered               avg  \n",
            "5            no            3.0        delivered               avg  \n",
            "6            no            1.0        delivered               avg  \n",
            "7            no            2.0    not delivered              good  \n",
            "8            no            2.0    not delivered              good  \n",
            "9           yes            2.0        delivered               avg  \n",
            "10          yes            3.0        delivered               bad  \n",
            "11           no            4.0    not delivered               bad  \n",
            "12           no            4.0        delivered               avg  \n",
            "13           no            3.0    not delivered              good  \n",
            "14           no            2.0    not delivered               bad  \n",
            "15           no            3.0        delivered               bad  \n",
            "16          yes            2.0    not delivered              good  \n",
            "17           no            3.0        delivered              good  \n",
            "18          yes            3.0    not delivered               bad  \n",
            "19           no            1.0        delivered               avg  \n",
            "20          yes            1.0    not delivered               avg  \n",
            "21           no            2.0        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n"
          ]
        }
      ],
      "source": [
        "#fillna\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,np.nan,8,9,10,11,12,13,14,np.nan,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,np.nan,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore',np.nan,'raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine',np.nan,'bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,np.nan,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,np.nan,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad',np.nan,'avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,np.nan,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes',np.nan,'no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,np.nan,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD',np.nan,'online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes',np.nan,'no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,np.nan,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,np.nan,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low',np.nan,'high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no',np.nan,'no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no',np.nan,'no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,np.nan,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered',np.nan,'delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad',np.nan,'avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"----------fillna-----------\")\n",
        "print(b.fillna(26))\n",
        "print(\"---------fillna(method='pad')----------\")\n",
        "print(b.fillna(method='pad'))\n",
        "print(\"---------fillna(method='bfill')--------\")\n",
        "print(b.fillna(method='bfill'))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ME0w5Tdpmlk6"
      },
      "source": [
        "Analysis the data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p9CiSsHKmoXf",
        "outputId": "00feea41-db8d-4eec-b9c2-5fa7806be92b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171  3500   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283  1800   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "--------min-------\n",
            "121\n"
          ]
        }
      ],
      "source": [
        "#min\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,3500,780,220,820,340,1800,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"--------min-------\")\n",
        "print(b['customer id'].min())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3fWBFUY4nOeC",
        "outputId": "23f11913-d5b3-4e45-bd9f-0d91d1b523ec"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "----------max---------\n",
            "273\n"
          ]
        }
      ],
      "source": [
        "#max\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"----------max---------\")\n",
        "print(b['customer id'].max())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FHH0q1pjncEW",
        "outputId": "4f17db12-0874-491d-9e35-71c022be627d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "----------rank--------\n",
            "0      8.0\n",
            "1     19.0\n",
            "2     12.0\n",
            "3     11.0\n",
            "4      9.0\n",
            "5     10.0\n",
            "6     17.5\n",
            "7     16.0\n",
            "8      6.5\n",
            "9      2.0\n",
            "10     1.0\n",
            "11    14.0\n",
            "12    21.0\n",
            "13     5.0\n",
            "14     3.5\n",
            "15    15.0\n",
            "16    20.0\n",
            "17     3.5\n",
            "18    17.5\n",
            "19     6.5\n",
            "20    13.0\n",
            "21    22.0\n",
            "Name: customer id, dtype: float64\n"
          ]
        }
      ],
      "source": [
        "#rank\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"----------rank--------\")\n",
        "print(b['customer id'].rank())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "m-jRYkqZn3YQ"
      },
      "source": [
        "Statistical Data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "elH3QQQ0n-Eo",
        "outputId": "4ee3dce8-91e3-4123-df02-f7045298b9b8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "----------mean----------\n",
            "180.4090909090909\n",
            "----------mode-----------\n",
            "0    124\n",
            "1    132\n",
            "2    232\n",
            "Name: customer id, dtype: int64\n",
            "----------median----------\n",
            "169.5\n",
            "----------count---------\n",
            "22\n",
            "-------describe---------\n",
            "            s.no  customer id  product id        cost  product rating  \\\n",
            "count  22.000000    22.000000   22.000000   22.000000       22.000000   \n",
            "mean   11.500000   180.409091  214.000000  411.363636        5.909091   \n",
            "std     6.493587    52.519075   59.502701  190.044994        2.158242   \n",
            "min     1.000000   121.000000  105.000000  120.000000        2.000000   \n",
            "25%     6.250000   132.000000  175.250000  262.500000        4.250000   \n",
            "50%    11.500000   169.500000  212.500000  360.000000        5.500000   \n",
            "75%    16.750000   231.750000  272.000000  520.000000        8.000000   \n",
            "max    22.000000   273.000000  296.000000  820.000000       10.000000   \n",
            "\n",
            "         order id   quantity    quality  warranty years  \n",
            "count   22.000000  22.000000  22.000000       22.000000  \n",
            "mean   206.136364   3.000000   3.045455        2.590909  \n",
            "std     55.800064   1.825742   1.290156        1.053750  \n",
            "min    125.000000   1.000000   1.000000        1.000000  \n",
            "25%    163.250000   2.000000   2.000000        2.000000  \n",
            "50%    177.500000   2.500000   3.000000        2.500000  \n",
            "75%    263.500000   4.000000   4.000000        3.000000  \n",
            "max    284.000000   7.000000   5.000000        5.000000  \n"
          ]
        }
      ],
      "source": [
        "#mean\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "print(\"----------mean----------\")\n",
        "print(b['customer id'].mean())\n",
        "print(\"----------mode-----------\")\n",
        "print(b['customer id'].mode())\n",
        "print(\"----------median----------\")\n",
        "print(b['customer id'].median())\n",
        "print(\"----------count---------\")\n",
        "print(b['customer id'].count())\n",
        "print(\"-------describe---------\")\n",
        "print(b.describe())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "walTWiv5q3Ko"
      },
      "source": [
        "Data Visualization"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 5966
        },
        "id": "gwVphCPdrADS",
        "outputId": "0242585f-4c85-41e6-d693-01ced8fd01c1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   payment status returned quantity  quality  sales rate discount  \\\n",
            "0         success      no         2        3        high      yes   \n",
            "1         success      no         1        1        high       no   \n",
            "2          failed      yes        3        5         low       no   \n",
            "3          failed      yes        5        4        high      yes   \n",
            "4         success      no         3        3         low       no   \n",
            "5         success       no        1        1         low      yes   \n",
            "6         success       no        1        4        high       no   \n",
            "7          failed      yes        2        3         low       no   \n",
            "8          failed      yes        3        4        high       no   \n",
            "9         success       no        1        2         low      yes   \n",
            "10        success       no        2        2         low       no   \n",
            "11         failed      yes        6        4        high       no   \n",
            "12        success       no        2        3         low      yes   \n",
            "13         failed      yes        1        4         low      yes   \n",
            "14         failed      yes        5        5        high       no   \n",
            "15        success       no        2        5         low       no   \n",
            "16         failed      yes        4        1         low      yes   \n",
            "17        success       no        6        2         low       no   \n",
            "18         failed      yes        4        4        high      yes   \n",
            "19        success       no        7        3         low       no   \n",
            "20         failed      yes        3        2        high       no   \n",
            "21        success       no        2        2         low      yes   \n",
            "\n",
            "   cencellation warranty years  shipping status customer feedback  \n",
            "0            no              2        delivered              good  \n",
            "1           yes              5        delivered              good  \n",
            "2           yes              3    not delivered               bad  \n",
            "3            no              4    not delivered               bad  \n",
            "4            no              2        delivered               bad  \n",
            "5           yes              3        delivered               avg  \n",
            "6            no              1        delivered               avg  \n",
            "7            no              2    not delivered              good  \n",
            "8            no              2    not delivered              good  \n",
            "9           yes              2        delivered               avg  \n",
            "10          yes              3        delivered               bad  \n",
            "11           no              4    not delivered               bad  \n",
            "12           no              4        delivered               avg  \n",
            "13           no              3    not delivered              good  \n",
            "14           no              2    not delivered               bad  \n",
            "15           no              3        delivered               bad  \n",
            "16          yes              2    not delivered              good  \n",
            "17           no              3        delivered              good  \n",
            "18          yes              3    not delivered               bad  \n",
            "19           no              1        delivered               avg  \n",
            "20          yes              1    not delivered               avg  \n",
            "21           no              2        delivered              good  \n",
            "\n",
            "[22 rows x 21 columns]\n",
            "    s.no  customer id customer name     product name  product id  cost  \\\n",
            "0      1          134          siva            shoes         153   520   \n",
            "1      2          233       krishna           laptop         126   570   \n",
            "2      3          172          ravi          ironbox         273   350   \n",
            "3      4          167       kishore           tshirt         237   250   \n",
            "4      5          144          ramu       mobilecase         135   300   \n",
            "5      6          154          raju  washing machine         253   450   \n",
            "6      7          232       shankar            watch         286   200   \n",
            "7      8          231         kiran              bag         197   650   \n",
            "8      9          132        tulasi      memory card         207   480   \n",
            "9     10          123       sridhar               AC         269   520   \n",
            "10    11          121         tarun         pendrive         171   350   \n",
            "11    12          221         peter       jeans pant         105   780   \n",
            "12    13          262          baji            crocs         273   220   \n",
            "13    14          125       krishna        key board         188   820   \n",
            "14    15          124          hema           glouse         289   340   \n",
            "15    16          225         navya            table         283   180   \n",
            "16    17          235        venkat            chair         199   470   \n",
            "17    18          124        lokesh            light         218   120   \n",
            "18    19          232      srikanth              cap         296   340   \n",
            "19    20          132     raj kumar            shirt         199   560   \n",
            "20    21          173       meghana       makeup kit         130   210   \n",
            "21    22          273        harish           mobile         221   370   \n",
            "\n",
            "   product review  product rating product availability  order id  ...  \\\n",
            "0            good               8                  yes       162  ...   \n",
            "1             avg              10                   no       227  ...   \n",
            "2       excellent               4                   no       182  ...   \n",
            "3            good               6                  yes       128  ...   \n",
            "4             bad               2                  yes       170  ...   \n",
            "5             avg               8                  yes       283  ...   \n",
            "6             avg               4                   no       273  ...   \n",
            "7            good               5                   no       267  ...   \n",
            "8       excellent               8                  yes       253  ...   \n",
            "9             avg               3                   no       173  ...   \n",
            "10           good               5                   no       167  ...   \n",
            "11            bad               3                  yes       125  ...   \n",
            "12           good               6                  yes       166  ...   \n",
            "13      excellent               5                  yes       284  ...   \n",
            "14           good               7                  yes       264  ...   \n",
            "15            avg               5                   no       163  ...   \n",
            "16           good               9                   no       164  ...   \n",
            "17      excellent               7                   no       265  ...   \n",
            "18            avg               5                   no       262  ...   \n",
            "19            bad               8                  yes       149  ...   \n",
            "20           good               4                  yes       154  ...   \n",
            "21      excellent               8                   no       254  ...   \n",
            "\n",
            "   returned quantity quality  sales rate  discount cencellation  \\\n",
            "0       no         2       3        high       yes           no   \n",
            "1       no         1       1        high        no          yes   \n",
            "2       yes        3       5         low        no          yes   \n",
            "3       yes        5       4        high       yes           no   \n",
            "4       no         3       3         low        no           no   \n",
            "5        no        1       1         low       yes          yes   \n",
            "6        no        1       4        high        no           no   \n",
            "7       yes        2       3         low        no           no   \n",
            "8       yes        3       4        high        no           no   \n",
            "9        no        1       2         low       yes          yes   \n",
            "10       no        2       2         low        no          yes   \n",
            "11      yes        6       4        high        no           no   \n",
            "12       no        2       3         low       yes           no   \n",
            "13      yes        1       4         low       yes           no   \n",
            "14      yes        5       5        high        no           no   \n",
            "15       no        2       5         low        no           no   \n",
            "16      yes        4       1         low       yes          yes   \n",
            "17       no        6       2         low        no           no   \n",
            "18      yes        4       4        high       yes          yes   \n",
            "19       no        7       3         low        no           no   \n",
            "20      yes        3       2        high        no          yes   \n",
            "21       no        2       2         low       yes           no   \n",
            "\n",
            "   warranty years shipping status  customer feedback result  \n",
            "0               2       delivered               good      5  \n",
            "1               5       delivered               good      2  \n",
            "2               3   not delivered                bad      8  \n",
            "3               4   not delivered                bad      9  \n",
            "4               2       delivered                bad      6  \n",
            "5               3       delivered                avg      2  \n",
            "6               1       delivered                avg      5  \n",
            "7               2   not delivered               good      5  \n",
            "8               2   not delivered               good      7  \n",
            "9               2       delivered                avg      3  \n",
            "10              3       delivered                bad      4  \n",
            "11              4   not delivered                bad     10  \n",
            "12              4       delivered                avg      5  \n",
            "13              3   not delivered               good      5  \n",
            "14              2   not delivered                bad     10  \n",
            "15              3       delivered                bad      7  \n",
            "16              2   not delivered               good      5  \n",
            "17              3       delivered               good      8  \n",
            "18              3   not delivered                bad      8  \n",
            "19              1       delivered                avg     10  \n",
            "20              1   not delivered                avg      5  \n",
            "21              2       delivered               good      4  \n",
            "\n",
            "[22 rows x 22 columns]\n",
            "---------line graph---------\n",
            "----------bar graph-------\n",
            "----------box graph--------\n",
            "---------kde graph---------\n",
            "-------area-------------\n",
            "---------histogram---------\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254]),\n",
        "   'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b)\n",
        "b['result']=b['quantity']+b['quality']\n",
        "print(b)\n",
        "print(\"---------line graph---------\")\n",
        "x=b.plot.line()\n",
        "print(\"----------bar graph-------\")\n",
        "x=b.plot.bar()\n",
        "print(\"----------box graph--------\")\n",
        "x=b.plot.box()\n",
        "print(\"---------kde graph---------\")\n",
        "x=b.plot.kde()\n",
        "print(\"-------area-------------\")\n",
        "x=b.plot.area()\n",
        "print(\"---------histogram---------\")\n",
        "x=b.plot.hist()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H4wRV__QuiQH"
      },
      "source": [
        "correlation"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-xGEkb3WuoQD",
        "outputId": "e51a6073-3ce1-4b78-82e6-17773ac0d3bb"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.16581072534265826\n",
            "-0.4449787782471676\n",
            "0.24051612828629385\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'s.no':pd.Series([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]),\n",
        "   'customer id':pd.Series([134,233,172,167,144,154,232,231,132,123,121,221,262,125,124,225,235,124,232,132,173,273]),\n",
        "   'customer name':pd.Series(['siva','krishna','ravi','kishore','ramu','raju','shankar','kiran','tulasi','sridhar','tarun','peter','baji','krishna','hema','navya','venkat','lokesh','srikanth','raj kumar','meghana','harish']),\n",
        "   'product name':pd.Series(['shoes','laptop','ironbox','tshirt','mobilecase','washing machine','watch','bag','memory card','AC','pendrive','jeans pant','crocs','key board','glouse','table','chair','light','cap','shirt','makeup kit','mobile']),\n",
        "   'product id':pd.Series([153,126,273,237,135,253,286,197,207,269,171,105,273,188,289,283,199,218,296,199,130,221]),\n",
        "   'cost':pd.Series([520,570,350,250,300,450,200,650,480,520,350,780,220,820,340,180,470,120,340,560,210,370]),\n",
        "   'product review':pd.Series(['good','avg','excellent','good','bad','avg','avg','good','excellent','avg','good','bad','good','excellent','good','avg','good','excellent','avg','bad','good','excellent']),\n",
        "   'product rating':pd.Series([8,10,4,6,2,8,4,5,8,3,5,3,6,5,7,5,9,7,5,8,4,8]),\n",
        "   'product availability':pd.Series(['yes','no','no','yes','yes','yes','no','no','yes','no','no','yes','yes','yes','yes','no','no','no','no','yes','yes','no']),\n",
        "   'order id':pd.Series([162,227,182,128,170,283,273,267,253,173,167,125,166,284,264,163,164,265,262,149,154,254])}\n",
        "b=pd.DataFrame(a)\n",
        "print(b['s.no'].corr(b['customer id']))\n",
        "print(b['product id'].corr(b['cost']))\n",
        "print(b['product rating'].corr(b['order id']))"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "covariation"
      ],
      "metadata": {
        "id": "6mhOmQnrF1bQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "a={'payment method':pd.Series(['online','COD','COD','online','online','COD','COD','online','COD','online','COD','online','online','online','COD','COD','online','COD','COD','online','COD','COD']),\n",
        "   'payment status':pd.Series(['success','success','failed','failed','success','success','success','failed','failed','success','success','failed','success','failed','failed','success','failed','success','failed','success','failed','success']),\n",
        "   'returned':pd.Series(['no ','no ','yes','yes','no ','no','no','yes','yes','no','no','yes','no','yes','yes','no','yes','no','yes','no','yes','no']),\n",
        "   'quantity':pd.Series([2,1,3,5,3,1,1,2,3,1,2,6,2,1,5,2,4,6,4,7,3,2]),\n",
        "   'quality':pd.Series([3,1,5,4,3,1,4,3,4,2,2,4,3,4,5,5,1,2,4,3,2,2]),\n",
        "   'sales rate':pd.Series(['high','high','low','high','low','low','high','low','high','low','low','high','low','low','high','low','low','low','high','low','high','low']),\n",
        "   'discount':pd.Series(['yes','no','no','yes','no','yes','no','no','no','yes','no','no','yes','yes','no','no','yes','no','yes','no','no','yes']),\n",
        "   'cencellation':pd.Series(['no','yes','yes','no','no','yes','no','no','no','yes','yes','no','no','no','no','no','yes','no','yes','no','yes','no']),\n",
        "   'warranty years':pd.Series([2,5,3,4,2,3,1,2,2,2,3,4,4,3,2,3,2,3,3,1,1,2]),\n",
        "   'shipping status':pd.Series(['delivered','delivered','not delivered','not delivered','delivered','delivered','delivered','not delivered','not delivered','delivered','delivered','not delivered','delivered','not delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered','not delivered','delivered']),\n",
        "   'customer feedback':pd.Series(['good','good','bad','bad','bad','avg','avg','good','good','avg','bad','bad','avg','good','bad','bad','good','good','bad','avg','avg','good']),}\n",
        "b=pd.DataFrame(a)\n",
        "print(b['quantity'].cov(b['quality']))\n",
        "print(b['quantity'].cov(b['warranty years']))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7bn4lIYxF5q8",
        "outputId": "c6d7263f-bab6-4822-8fc2-adbe9a0b475c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.5238095238095237\n",
            "-0.09523809523809523\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}